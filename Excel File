#from Tkinter import *
import pandas as pd
from tkinter import Tk
from tkinter.filedialog import askopenfilename
Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing
filename = askopenfilename() # show an "Open" dialog box and return the path to the selected file

df_key_Application=pd.read_excel(filename,sheet_name='Dashboard', nrows=16, skiprows=2,index=False)
df_key_Application1=pd.read_excel(filename,sheet_name='Dashboard')
df=df_key_Application1.iat[0,4]
df_date=pd.to_datetime(df).date()
df_AMS_INC=pd.read_excel(r'C:\Users\742711\Documents\important\AMS 2.0 INC Response and Resolution SLA_31-May-2019.xlsx',sheet_name='INC')
df_STD_and_Non_STD=pd.read_excel(r'C:\Users\742711\Documents\important\STD and Non-STD SR SLA calculation-31-May-2019.xlsx',sheet_name='SR Dump')
df_key_required=df_key_Application[['Unnamed: 0','Unnamed: 1', 'Clinical']][df_key_Application.Clinical<1]
df_key_required.columns=['SLA Metrics Code','Service Level Name','Clinical']
df_SLA_required=df_key_required[(df_key_required['SLA Metrics Code'].isin(["AMS-SL-01","AMS-SL-02","AMS-SL-03","AMS-SL-04","AMS-SL-05","AMS-SL-07","AMS-SL-09","AMS-SL-12"]))]
list_1=["AMS-SL-01","AMS-SL-02","AMS-SL-03","AMS-SL-04","AMS-SL-05","AMS-SL-07","AMS-SL-09","AMS-SL-12"]
df4=df_SLA_required['SLA Metrics Code']
dt=filename[70:-5]
writer = pd.ExcelWriter(r'C:\Users\742711\Documents\important\first_file.xlsx')
for col in df4:
    for i in range(len(list_1)):
        if col==list_1[0]:
            df9_01=df_AMS_INC[(df_AMS_INC['Assignment group']=="TS-GLOB-L2-R&D CLINICAL") & (df_AMS_INC['Metal']=="Gold") & (df_AMS_INC['Response SLA']=="Not met")]
            df9_01["Comments"]=""
            df9_01.insert(loc=0, column='Date', value=df_date)
            df9_01.set_index('Number',inplace=True)
            df9_01.reset_index()
            df9_01.to_excel(writer, sheet_name='AMS-SL-01')
            
            
        elif col==list_1[1]:
            df9_02=df_AMS_INC[(df_AMS_INC['Assignment group']=="TS-GLOB-L2-R&D CLINICAL") & (df_AMS_INC['Metal']=="Silver") & (df_AMS_INC['Response SLA']=="Not met")]
            df9_02["Comments"]=""
            df9_02.insert(loc=0, column='Date', value=df_date)
            df9_02.set_index('Number',inplace=True)
            df9_02.to_excel(writer, sheet_name='AMS-SL-02')
            
            
        elif col==list_1[2]:
            df9_03=df_AMS_INC[(df_AMS_INC['Assignment group']=="TS-GLOB-L2-R&D CLINICAL") & (df_AMS_INC['Metal']=="Gold") & (df_AMS_INC['Resolution SLA']=="Not met")]
            df9_03["Comments"]=""
            df9_03.insert(loc=0, column='Date', value=df_date)
            df9_03.set_index('Number',inplace=True)
            df9_03.to_excel(writer, sheet_name='AMS-SL-03')
            
            
        elif col==list_1[3]:
            df9_04=df_AMS_INC[(df_AMS_INC['Assignment group']=="TS-GLOB-L2-R&D CLINICAL") & (df_AMS_INC['Metal']=="Silver") & (df_AMS_INC['Resolution SLA']=="Not met")]
            df9_04["Comments"]=""
            df9_04.insert(loc=0, column='Date', value=df_date)
            df9_04.set_index('Number',inplace=True)
            df9_04.to_excel(writer, sheet_name='AMS-SL-04')
            
            
        elif col==list_1[4]:
            df9_05=df_AMS_INC[(df_AMS_INC['Assignment group']=="TS-GLOB-L2-R&D CLINICAL") & (df_AMS_INC['Backlog (resolved)?']=="Yes") & (df_AMS_INC['Resolution SLA']=="Not met")]
            df9_05["Comments"]=""
            df9_05.insert(loc=0, column='Date', value=df_date)
            df9_05.set_index('Number',inplace=True)
            df9_05.to_excel(writer, sheet_name='AMS-SL-05')
            
            
        elif col==list_1[5]:
            df9_07=df_STD_and_Non_STD[(df_STD_and_Non_STD['RITM state']=="Closed Complete") & (df_STD_and_Non_STD['Standard / Non-Standard']=="Non-Standard") & (df_STD_and_Non_STD['STD / Non-STD SLA']=="Not met")]
            df9_07["Comments"]=""
            df9_07.insert(loc=0, column='Date', value=df_date)
            df9_07.set_index('number',inplace=True)
            df9_07.to_excel(writer, sheet_name='AMS-SL-07')
            
            
        elif col==list_1[6]:    
            df9_09=df_STD_and_Non_STD[(df_STD_and_Non_STD['RITM state']=="Closed Complete") & (df_STD_and_Non_STD['Standard / Non-Standard']=="Non-Standard") & (df_STD_and_Non_STD['GSC']=="Clinical")& (df_STD_and_Non_STD['Non-STD SLA']=="Not met")]
            df9_09["Comments"]=""
            df9_09.insert(loc=0, column='Date', value=df_date)
            df9_09.set_index('number',inplace=True)
            df9_09.to_excel(writer, sheet_name='AMS-SL-09')
            
            
        elif col==list_1[7]:
            df9_12=df_STD_and_Non_STD[(df_STD_and_Non_STD['RITM state'].isin(["Open","Work in Progress"])) & (df_STD_and_Non_STD['Prior to Go Live?'] !="Yes") & (df_STD_and_Non_STD['Business days Open based on due date - Aging'].isin(["10d-15d","15d-30d","30d-60d","> 60d"]))& (df_STD_and_Non_STD['GSC']=="Clinical") & (df_STD_and_Non_STD['Non-STD SLA']=="Not met")] 
            df9_12["Comments"]=""
            df9_12.insert(loc=0, column='Date', value=df_date)
            df9_12.set_index('number',inplace=True)
            df9_12.to_excel(writer, sheet_name='AMS-SL-12')
            
            
writer.save()








